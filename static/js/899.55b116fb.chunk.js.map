{"version":3,"file":"static/js/899.55b116fb.chunk.js","mappings":"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","sources":["components/global/FormInput/FormInput.jsx","components/modules/ForgotPassForm/ForgotPassForm.styled.js","components/modules/ForgotPassForm/ForgotPassSchema.js","components/modules/ForgotPassForm/ForgotPassForm.jsx","page/ForgotPassword/ForgotPassword.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport { Input, Label, ErrorMsg, IconBox } from './FormInput.styled';\r\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\r\n\r\nexport const FormInput = ({ name, type, placeholder = '', mb, showhide = false }) => {\r\n  const [inputType, setInputType] = useState(type);\r\n  const [passShown, setPassShown] = useState(false);\r\n\r\n  const togglePassShown = () => {\r\n    setPassShown(!passShown);\r\n    setInputType(passShown ? type : 'text');\r\n  };\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n  return (\r\n    <Label mb={mb}>\r\n      <Input {...register(name)} type={inputType} placeholder={placeholder} />\r\n      {showhide && (\r\n        <IconBox onClick={togglePassShown}>\r\n          {passShown ? <AiFillEyeInvisible color=\"grey\" /> : <AiFillEye color=\"grey\" />}\r\n        </IconBox>\r\n      )}\r\n\r\n      {errors[name] && <ErrorMsg>{errors[name]?.message}</ErrorMsg>}\r\n    </Label>\r\n  );\r\n};\r\n\r\nFormInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  mb: PropTypes.number,\r\n  showhide: PropTypes.bool,\r\n};\r\n","import styled from 'styled-components';\r\nimport { Container } from 'components/global/Container';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport bgmob from '../../../img/auth/bgMob.png';\r\nimport bgtab from '../../../img/auth/bgTab.png';\r\nimport bgdesc from '../../../img/auth/bgDesc.png';\r\n\r\nexport const BgWrapper = styled.div`\r\n  height: calc(100vh - 74px);\r\n  background-image: url(${bgmob});\r\n  background-position: 50% 100%;\r\n  background-repeat: no-repeat;\r\n  background-size: 1200px;\r\n\r\n  @media (min-width: 768px) {\r\n    height: calc(100vh - 97px);\r\n    min-height: 500px;\r\n    background-image: url(${bgtab});\r\n    background-size: 1500px;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    height: calc(100vh - 96px);\r\n    background-image: url(${bgdesc});\r\n  }\r\n`;\r\n\r\nexport const AuthContainer = styled(Container)`\r\n  padding-top: 42px;\r\n\r\n  @media (min-width: 768px) {\r\n    padding-top: 0;\r\n    position: relative;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 45%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: ${p => p.theme.colors.w};\r\n    width: 608px;\r\n    padding: 60px 80px 40px 80px;\r\n    border-radius: ${p => p.theme.radii.inputRadius};\r\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 618px;\r\n    padding: 60px 80px;\r\n  }\r\n`;\r\n\r\nexport const ForgotPassFormTitle = styled.h2`\r\n  font-family: ${p => p.theme.fonts.manrope};\r\n  font-weight: ${p => p.theme.fontWeights.bold};\r\n  font-size: ${p => p.theme.fontSizes.xxl};\r\n  line-height: ${p => p.theme.lineHeights.heading};\r\n  color: ${p => p.theme.colors.b};\r\n  margin-bottom: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: ${p => p.theme.fontSizes.xxxml};\r\n  } ;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  font-family: ${p => p.theme.fonts.manrope};\r\n  font-weight: ${p => p.theme.fontWeights.normal};\r\n  font-size: ${p => p.theme.fontSizes.s};\r\n  line-height: ${p => p.theme.lineHeights.heading};\r\n  color: ${p => p.theme.colors.l};\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport const InputsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  @media (min-width: 1280px) {\r\n    max-width: 458px;\r\n  }\r\n`;\r\n\r\nexport const SuccessMessage = styled.p`\r\n  text-align: center;\r\n\r\n  font-family: ${p => p.theme.fonts.manrope};\r\n  font-weight: ${p => p.theme.fontWeights.normal};\r\n  font-size: ${p => p.theme.fontSizes.l};\r\n  line-height: ${p => p.theme.lineHeights.heading};\r\n  color: ${p => p.theme.colors.a};\r\n`;\r\n","import * as yup from 'yup';\r\n\r\nexport const forgotPassSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .min(7, 'Must be more than 7 characters')\r\n    .max(63, 'Must be less than 63 characters')\r\n    .email('minimum 2 characters before @, cannot start with a dash, only Latin letters')\r\n    .required('The field is mandatory')\r\n    .matches(\r\n      /^(?!-)[\\w.-]{2,}@[\\w-]+(\\.[\\w-]+)*\\.[a-zA-Z]{2,}$/u,\r\n      'minimum 2 characters before @, cannot start with a dash, only Latin letters'\r\n    ),\r\n  password: yup.string().required('The field is mandatory'),\r\n});\r\n","import { FormContext } from 'components/global/FormContext';\r\nimport React, { useState } from 'react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n// import { Alert } from '@mui/material';\r\nimport {\r\n  AuthContainer,\r\n  BgWrapper,\r\n  ForgotPassFormTitle,\r\n  FormWrapper,\r\n  InputsWrapper,\r\n  Link,\r\n  SuccessMessage,\r\n} from './ForgotPassForm.styled';\r\nimport { forgotPassSchema } from './ForgotPassSchema';\r\nimport { FormInput } from 'components/global/FormInput';\r\nimport { Button } from 'components/global/button';\r\nimport { Loader } from 'components/global/Loader';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport server from 'api/basic';\r\n\r\nexport const ForgotPassForm = () => {\r\n  // const [err, setErr] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const method = useForm({\r\n    resolver: yupResolver(forgotPassSchema),\r\n    mode: 'onTouched',\r\n  });\r\n\r\n  const { reset, getValues } = method;\r\n\r\n  const onSubmit = async () => {\r\n    const email = getValues('email');\r\n    try {\r\n      setIsLoading(true);\r\n      await server.patch('/auth/forgotten-password', { email });\r\n      // setErr(null);\r\n      setSuccess(true);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(error.response.data.message, { hideProgressBar: true });\r\n\r\n      // setErr(error.response.data.message);\r\n      return;\r\n    }\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <BgWrapper>\r\n      <ToastContainer />\r\n      {isLoading && <Loader opacity={0.5} />}\r\n      <AuthContainer>\r\n        <FormWrapper>\r\n          <ForgotPassFormTitle>{success ? 'Success' : 'Enter your email'}</ForgotPassFormTitle>\r\n          {/* {err && (\r\n            <Alert style={{ marginBottom: 16 }} severity=\"error\" onClose={() => setErr(null)}>\r\n              {err}\r\n            </Alert>\r\n          )} */}\r\n          <FormContext methods={method} submit={() => console.log('click')}>\r\n            {success ? (\r\n              <SuccessMessage>An email has been sent to you</SuccessMessage>\r\n            ) : (\r\n              <InputsWrapper>\r\n                <FormInput name=\"email\" type=\"text\" placeholder=\"Email\" mb={20} />\r\n                <Button theme={'dark'} type={'submit'} fn={() => onSubmit()}>\r\n                  Send Email\r\n                </Button>\r\n              </InputsWrapper>\r\n            )}\r\n          </FormContext>\r\n          <Link to=\"/login\">Back to login</Link>\r\n        </FormWrapper>\r\n      </AuthContainer>\r\n    </BgWrapper>\r\n  );\r\n};\r\n","import { ForgotPassForm } from 'components/modules/ForgotPassForm';\r\nimport React from 'react';\r\n\r\nconst ForgotPassword = () => {\r\n  return <ForgotPassForm />;\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"names":["FormInput","name","type","placeholder","mb","showhide","useState","inputType","setInputType","passShown","setPassShown","useFormContext","register","errors","formState","onClick","color","message","BgWrapper","styled","bgmob","bgtab","bgdesc","AuthContainer","Container","FormWrapper","p","theme","colors","w","radii","inputRadius","ForgotPassFormTitle","fonts","manrope","fontWeights","bold","fontSizes","xxl","lineHeights","heading","b","xxxml","Link","NavLink","normal","s","l","InputsWrapper","SuccessMessage","a","forgotPassSchema","yup","email","min","max","required","matches","password","ForgotPassForm","isLoading","setIsLoading","success","setSuccess","method","useForm","resolver","yupResolver","mode","reset","getValues","onSubmit","server","toast","response","data","hideProgressBar","Loader","opacity","FormContext","methods","submit","console","log","fn","to"],"sourceRoot":""}