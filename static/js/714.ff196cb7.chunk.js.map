{"version":3,"file":"static/js/714.ff196cb7.chunk.js","mappings":"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","sources":["components/global/FormInput/FormInput.jsx","components/modules/LoginForm/LoginForm.styled.js","components/modules/LoginForm/LoginSchema.js","components/modules/LoginForm/LoginForm.jsx","page/LoginPage/LoginPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport { Input, Label, ErrorMsg, IconBox } from './FormInput.styled';\r\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\r\n\r\nexport const FormInput = ({ name, type, placeholder = '', mb, showhide = false }) => {\r\n  const [inputType, setInputType] = useState(type);\r\n  const [passShown, setPassShown] = useState(false);\r\n\r\n  const togglePassShown = () => {\r\n    setPassShown(!passShown);\r\n    setInputType(passShown ? type : 'text');\r\n  };\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n  return (\r\n    <Label mb={mb}>\r\n      <Input {...register(name)} type={inputType} placeholder={placeholder} />\r\n      {showhide && (\r\n        <IconBox onClick={togglePassShown}>\r\n          {passShown ? <AiFillEyeInvisible color=\"grey\" /> : <AiFillEye color=\"grey\" />}\r\n        </IconBox>\r\n      )}\r\n\r\n      {errors[name] && <ErrorMsg>{errors[name]?.message}</ErrorMsg>}\r\n    </Label>\r\n  );\r\n};\r\n\r\nFormInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  mb: PropTypes.number,\r\n  showhide: PropTypes.bool,\r\n};\r\n","import { Container } from 'components/global/Container';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport bgmob from '../../../img/auth/bgMob.png';\r\nimport bgtab from '../../../img/auth/bgTab.png';\r\nimport bgdesc from '../../../img/auth/bgDesc.png';\r\n\r\nexport const BgWrapper = styled.div`\r\n  height: calc(100vh - 74px);\r\n  background-image: url(${bgmob});\r\n  background-position: 50% 100%;\r\n  background-repeat: no-repeat;\r\n  background-size: 1200px;\r\n\r\n  @media (min-width: 768px) {\r\n    height: calc(100vh - 97px);\r\n    min-height: 600px;\r\n    background-image: url(${bgtab});\r\n    background-size: 1500px;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    height: calc(100vh - 96px);\r\n    background-image: url(${bgdesc});\r\n  }\r\n`;\r\n\r\nexport const AuthContainer = styled(Container)`\r\n  padding-top: 42px;\r\n\r\n  @media (min-width: 768px) {\r\n    padding-top: 0;\r\n    position: relative;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const LoginFormTitle = styled.h2`\r\n  font-family: ${p => p.theme.fonts.manrope};\r\n  font-weight: ${p => p.theme.fontWeights.bold};\r\n  font-size: ${p => p.theme.fontSizes.xxl};\r\n  line-height: ${p => p.theme.lineHeights.heading};\r\n  color: ${p => p.theme.colors.b};\r\n  margin-bottom: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: ${p => p.theme.fontSizes.xxxml};\r\n  } ;\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 45%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: ${p => p.theme.colors.w};\r\n    width: 608px;\r\n    padding: 60px 80px 40px 80px;\r\n    border-radius: ${p => p.theme.radii.inputRadius};\r\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 618px;\r\n    padding: 60px 80px;\r\n  }\r\n`;\r\n\r\nexport const InputsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  @media (min-width: 1280px) {\r\n    max-width: 458px;\r\n  }\r\n`;\r\n\r\nexport const LoginText = styled.p`\r\n  font-family: ${p => p.theme.fonts.manrope};\r\n  font-weight: ${p => p.theme.fontWeights.normal};\r\n  font-size: ${p => p.theme.fontSizes.s};\r\n  line-height: ${p => p.theme.lineHeights.heading};\r\n  color: ${p => p.theme.colors.g};\r\n  margin-right: 5px;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  font-family: ${p => p.theme.fonts.manrope};\r\n  font-weight: ${p => p.theme.fontWeights.normal};\r\n  font-size: ${p => p.theme.fontSizes.s};\r\n  line-height: ${p => p.theme.lineHeights.heading};\r\n  color: ${p => p.theme.colors.l};\r\n`;\r\n\r\nexport const GoogleBox = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 200px;\r\n  height: 50px;\r\n  border-radius: ${p => p.theme.radii.inputRadius};\r\n  border: 1px solid transparent;\r\n\r\n  transition: var(--transition-border-color);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border: 1px solid ${p => p.theme.colors.a};\r\n  }\r\n`;\r\n","import * as yup from 'yup';\r\n\r\nexport const loginSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .min(7, 'Must be more than 7 characters')\r\n    .max(63, 'Must be less than 63 characters')\r\n    .email('minimum 2 characters before @, cannot start with a dash, only Latin letters')\r\n    .required('The field is mandatory')\r\n    .matches(\r\n      /^(?!-)[\\w.-]{2,}@[\\w-]+(\\.[\\w-]+)*\\.[a-zA-Z]{2,}$/u,\r\n      'minimum 2 characters before @, cannot start with a dash, only Latin letters'\r\n    ),\r\n  password: yup.string().required('The field is mandatory'),\r\n});\r\n","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { useDispatch } from 'react-redux';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Button } from 'components/global/button';\r\nimport {\r\n  AuthContainer,\r\n  FormWrapper,\r\n  LoginFormTitle,\r\n  InputsWrapper,\r\n  LoginText,\r\n  Link,\r\n  BgWrapper,\r\n  GoogleBox,\r\n} from './LoginForm.styled';\r\nimport { Box } from 'components/global/Box';\r\n\r\nimport { FcGoogle } from 'react-icons/fc';\r\n\r\nimport { loginSchema } from './LoginSchema';\r\nimport { FormInput } from '../../global/FormInput';\r\nimport { FormContext } from 'components/global/FormContext';\r\nimport { logIn } from 'api';\r\nimport { register } from 'redux/auth';\r\n// import { Alert } from '@mui/material';\r\nimport { Loader } from 'components/global/Loader';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const LoginForm = () => {\r\n  const [err, setErr] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const method = useForm({\r\n    resolver: yupResolver(loginSchema),\r\n    mode: 'onTouched',\r\n  });\r\n\r\n  const { reset } = method;\r\n\r\n  const { mutate: logUser, isLoading } = useMutation({\r\n    mutationKey: ['user'],\r\n    mutationFn: data => logIn(data),\r\n    onSuccess: logData => {\r\n      // console.log(logData);\r\n      setErr(null);\r\n      dispatch(register(logData));\r\n      reset();\r\n    },\r\n\r\n    onError: error => {\r\n      setErr(error.response.data.message);\r\n      console.log(err);\r\n      // console.log(error.response.data.message);\r\n      toast.error(error.response.data.message, { hideProgressBar: true });\r\n    },\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    // console.log(data);\r\n    logUser(data);\r\n  };\r\n\r\n  return (\r\n    <BgWrapper>\r\n      <ToastContainer />\r\n      {isLoading && <Loader opacity={0.5} />}\r\n      <AuthContainer>\r\n        <FormWrapper>\r\n          <LoginFormTitle>Login</LoginFormTitle>\r\n          {/* {err && (\r\n            <Alert style={{ marginBottom: 16 }} severity=\"error\" onClose={() => setErr(null)}>\r\n              {err}\r\n            </Alert>\r\n          )} */}\r\n          <FormContext methods={method} submit={onSubmit}>\r\n            <InputsWrapper>\r\n              <FormInput name=\"email\" type=\"text\" placeholder=\"Email\" mb={20} />\r\n              <FormInput\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                mb={40}\r\n                showhide={true}\r\n              />\r\n\r\n              <Button theme={'dark'} type={'submit'}>\r\n                Login\r\n              </Button>\r\n            </InputsWrapper>\r\n          </FormContext>\r\n          <Box display=\"flex\" mt={40} mb={5}>\r\n            <LoginText>Don't have an account?</LoginText>\r\n            <Link to=\"/register\">Register</Link>\r\n          </Box>\r\n          <Link to=\"/forgot-password\">I forgot password</Link>\r\n          <a href=\"https://node-team-project.onrender.com/api/auth/google\">\r\n            <GoogleBox>\r\n              <LoginText>Sign in with Google</LoginText>\r\n\r\n              <FcGoogle size={'25px'} />\r\n            </GoogleBox>\r\n          </a>\r\n        </FormWrapper>\r\n      </AuthContainer>\r\n    </BgWrapper>\r\n  );\r\n};\r\n","import { LoginForm } from 'components/modules/LoginForm';\r\nimport React from 'react';\r\n\r\nconst LoginPage = () => {\r\n  return <LoginForm />;\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["FormInput","name","type","placeholder","mb","showhide","useState","inputType","setInputType","passShown","setPassShown","useFormContext","register","errors","formState","onClick","color","message","BgWrapper","styled","bgmob","bgtab","bgdesc","AuthContainer","Container","LoginFormTitle","p","theme","fonts","manrope","fontWeights","bold","fontSizes","xxl","lineHeights","heading","colors","b","xxxml","FormWrapper","w","radii","inputRadius","InputsWrapper","LoginText","normal","s","g","Link","NavLink","l","GoogleBox","a","loginSchema","yup","email","min","max","required","matches","password","LoginForm","err","setErr","dispatch","useDispatch","method","useForm","resolver","yupResolver","mode","reset","useMutation","mutationKey","mutationFn","data","logIn","onSuccess","logData","onError","error","response","console","log","toast","hideProgressBar","logUser","mutate","isLoading","Loader","opacity","FormContext","methods","submit","Box","display","mt","to","href","size"],"sourceRoot":""}