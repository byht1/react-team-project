{"version":3,"file":"static/js/505.221f30cc.chunk.js","mappings":"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","sources":["components/global/FormInput/FormInput.jsx","components/modules/NewPassForm/newPassSchema.js","components/modules/NewPassForm/NewPassForm.styled.js","components/modules/NewPassForm/NewPassForm.jsx","page/NewPassword/NewPassword.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport { Input, Label, ErrorMsg, IconBox } from './FormInput.styled';\r\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\r\n\r\nexport const FormInput = ({ name, type, placeholder = '', mb, showhide = false }) => {\r\n  const [inputType, setInputType] = useState(type);\r\n  const [passShown, setPassShown] = useState(false);\r\n\r\n  const togglePassShown = () => {\r\n    setPassShown(!passShown);\r\n    setInputType(passShown ? type : 'text');\r\n  };\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n  return (\r\n    <Label mb={mb}>\r\n      <Input {...register(name)} type={inputType} placeholder={placeholder} />\r\n      {showhide && (\r\n        <IconBox onClick={togglePassShown}>\r\n          {passShown ? <AiFillEyeInvisible color=\"grey\" /> : <AiFillEye color=\"grey\" />}\r\n        </IconBox>\r\n      )}\r\n\r\n      {errors[name] && <ErrorMsg>{errors[name]?.message}</ErrorMsg>}\r\n    </Label>\r\n  );\r\n};\r\n\r\nFormInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  mb: PropTypes.number,\r\n  showhide: PropTypes.bool,\r\n};\r\n","import * as yup from 'yup';\r\n\r\nexport const newPassSchema = yup.object({\r\n  password: yup\r\n    .string()\r\n    .required('The field is mandatory')\r\n    .max(32, 'Must be less than 32 characters')\r\n    .matches(\r\n      /(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*_]{7,}/,\r\n      'The password must contain uppercase and lowercase letters, at least 7 symbols'\r\n    ),\r\n  confirmpassword: yup\r\n    .string()\r\n    .required('The field is mandatory')\r\n    .oneOf([yup.ref('password'), null], 'Passwords do not match'),\r\n});\r\n","import styled from 'styled-components';\r\nimport { Container } from 'components/global/Container';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport bgmob from '../../../img/auth/bgMob.png';\r\nimport bgtab from '../../../img/auth/bgTab.png';\r\nimport bgdesc from '../../../img/auth/bgDesc.png';\r\n\r\nexport const BgWrapper = styled.div`\r\n  height: calc(100vh - 74px);\r\n  background-image: url(${bgmob});\r\n  background-position: 50% 100%;\r\n  background-repeat: no-repeat;\r\n  background-size: 1200px;\r\n\r\n  @media (min-width: 768px) {\r\n    height: calc(100vh - 97px);\r\n    min-height: 500px;\r\n    background-image: url(${bgtab});\r\n    background-size: 1500px;\r\n  }\r\n\r\n  @media (min-width: 1280px) {\r\n    height: calc(100vh - 96px);\r\n    background-image: url(${bgdesc});\r\n  }\r\n`;\r\n\r\nexport const AuthContainer = styled(Container)`\r\n  padding-top: 42px;\r\n\r\n  @media (min-width: 768px) {\r\n    padding-top: 0;\r\n    position: relative;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 45%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: ${p => p.theme.colors.w};\r\n    width: 608px;\r\n    padding: 60px 80px 40px 80px;\r\n    border-radius: ${p => p.theme.radii.inputRadius};\r\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 618px;\r\n    padding: 60px 80px;\r\n  }\r\n`;\r\n\r\nexport const NewPassFormTitle = styled.h2`\r\n  font-family: ${p => p.theme.fonts.manrope};\r\n  font-weight: ${p => p.theme.fontWeights.bold};\r\n  font-size: ${p => p.theme.fontSizes.xxl};\r\n  line-height: ${p => p.theme.lineHeights.heading};\r\n  color: ${p => p.theme.colors.b};\r\n  margin-bottom: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: ${p => p.theme.fontSizes.xxxml};\r\n  } ;\r\n`;\r\n\r\nexport const InputsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  @media (min-width: 1280px) {\r\n    max-width: 458px;\r\n  }\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  font-family: ${p => p.theme.fonts.manrope};\r\n  font-weight: ${p => p.theme.fontWeights.normal};\r\n  font-size: ${p => p.theme.fontSizes.s};\r\n  line-height: ${p => p.theme.lineHeights.heading};\r\n  color: ${p => p.theme.colors.l};\r\n  margin-top: 40px;\r\n`;\r\n","import { FormContext } from 'components/global/FormContext';\r\nimport React, { useState } from 'react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Alert } from '@mui/material';\r\nimport { FormInput } from 'components/global/FormInput';\r\nimport { Button } from 'components/global/button';\r\nimport { Loader } from 'components/global/Loader';\r\nimport { newPassSchema } from './newPassSchema';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport {\r\n  BgWrapper,\r\n  AuthContainer,\r\n  FormWrapper,\r\n  NewPassFormTitle,\r\n  InputsWrapper,\r\n  Link,\r\n} from './NewPassForm.styled';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { newPass } from 'api';\r\nimport { register } from 'redux/auth';\r\n\r\nexport const NewPassForm = () => {\r\n  const [err, setErr] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const accessToken = searchParams.get('token');\r\n\r\n  const method = useForm({\r\n    resolver: yupResolver(newPassSchema),\r\n    mode: 'onTouched',\r\n  });\r\n  const { reset, getValues } = method;\r\n\r\n  const { mutate: saveNewPass, isLoading } = useMutation({\r\n    mutationKey: ['user'],\r\n    mutationFn: ({ token, data }) => {\r\n      // console.log(token);\r\n      // console.log(data);\r\n      return newPass(token, data);\r\n    },\r\n    onSuccess: newData => {\r\n      // console.log(newData);\r\n      setErr(null);\r\n      dispatch(register(newData));\r\n      setSearchParams({});\r\n      reset();\r\n    },\r\n    onError: error => {\r\n      // console.log(error);\r\n      setErr(error.response.data.message);\r\n    },\r\n  });\r\n\r\n  const onSubmit = () => {\r\n    // console.log(data.password);\r\n\r\n    const password = getValues('password');\r\n    // console.log(password);\r\n    saveNewPass({ token: accessToken, data: { password } });\r\n  };\r\n\r\n  return (\r\n    <BgWrapper>\r\n      {isLoading && <Loader opacity={0.5} />}\r\n      <AuthContainer>\r\n        <FormWrapper>\r\n          <NewPassFormTitle></NewPassFormTitle>\r\n          {err && (\r\n            <Alert style={{ marginBottom: 16 }} severity=\"error\" onClose={() => setErr(null)}>\r\n              {err}\r\n            </Alert>\r\n          )}\r\n          <FormContext methods={method} submit={onSubmit}>\r\n            <InputsWrapper>\r\n              <FormInput\r\n                name=\"password\"\r\n                type={'password'}\r\n                placeholder=\"Password\"\r\n                mb={20}\r\n                showhide={true}\r\n              />\r\n\r\n              <FormInput\r\n                name=\"confirmpassword\"\r\n                type={'password'}\r\n                placeholder=\"Confirm Password\"\r\n                mb={40}\r\n                showhide={true}\r\n              />\r\n              <Button theme={'dark'} type={'submit'}>\r\n                Change password\r\n              </Button>\r\n            </InputsWrapper>\r\n          </FormContext>\r\n          <Link to=\"/login\">Back to login</Link>\r\n        </FormWrapper>\r\n      </AuthContainer>\r\n    </BgWrapper>\r\n  );\r\n};\r\n","import { NewPassForm } from 'components/modules/NewPassForm';\r\nimport React from 'react';\r\n\r\nconst NewPassword = () => {\r\n  return <NewPassForm />;\r\n};\r\n\r\nexport default NewPassword;\r\n"],"names":["FormInput","name","type","placeholder","mb","showhide","useState","inputType","setInputType","passShown","setPassShown","useFormContext","register","errors","formState","onClick","color","message","newPassSchema","yup","password","required","max","matches","confirmpassword","oneOf","BgWrapper","styled","bgmob","bgtab","bgdesc","AuthContainer","Container","FormWrapper","p","theme","colors","w","radii","inputRadius","NewPassFormTitle","fonts","manrope","fontWeights","bold","fontSizes","xxl","lineHeights","heading","b","xxxml","InputsWrapper","Link","NavLink","normal","s","l","NewPassForm","err","setErr","dispatch","useDispatch","useSearchParams","searchParams","setSearchParams","accessToken","get","method","useForm","resolver","yupResolver","mode","reset","getValues","useMutation","mutationKey","mutationFn","token","data","newPass","onSuccess","newData","onError","error","response","saveNewPass","mutate","isLoading","Loader","opacity","Alert","style","marginBottom","severity","onClose","FormContext","methods","submit","to"],"sourceRoot":""}