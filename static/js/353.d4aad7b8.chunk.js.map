{"version":3,"file":"static/js/353.d4aad7b8.chunk.js","mappings":"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","sources":["components/global/text/helpers/index.js","components/global/text/Text/Text.styled.js","components/global/text/Text/Text.jsx","components/global/text/title/Title.styled.js","components/global/text/title/TitleH2.jsx","components/global/text/title/TitleH3.jsx","components/modules/Blog/common/LikeButton/LikeButton.styled.js","components/modules/Blog/common/LikeButton/LikeButton.jsx","components/modules/Blog/helpers/convertCreationDatetoDateAndTime.js","components/modules/Blog/PostDetails/PostCard/PostCard.styled.js","components/modules/Blog/PostDetails/PostCard/PostCard.jsx","components/modules/Blog/PostDetails/PostComment/PostComment.styled.js","components/modules/Blog/PostDetails/PostComment/PostComment.jsx","components/modules/Blog/PostDetails/PostList/PostList.styled.js","components/modules/Blog/PostDetails/PostList/PostItem.jsx","components/modules/Blog/PostDetails/PostList/PostList.jsx","components/modules/Blog/PostDetails/PostDetails.styled.js","components/modules/Blog/PostDetails/PostDetails.jsx","components/modules/Blog/PostDetails/PostDetailsMain.jsx","page/PostDetails/PostDetails.jsx"],"sourcesContent":["import { marginType, widthType } from 'helpers';\r\nimport PropTypes from 'prop-types';\r\nimport { colors, fonts, lineHeights } from 'theme/theme';\r\n\r\nexport const weights = Object.freeze({\r\n  400: 'normal',\r\n  500: 'average',\r\n  600: 'semiBold',\r\n  700: 'bold',\r\n});\r\n\r\nexport const sizes = Object.freeze({\r\n  12: 'min',\r\n  14: 's',\r\n  16: 'm',\r\n  18: 'l',\r\n  20: 'xl',\r\n  24: 'xxl',\r\n  28: 'xxxl',\r\n  32: 'logo',\r\n  48: 'xxxxl',\r\n});\r\n\r\nconst fontsEnum = Object.keys(fonts);\r\nconst weightEnum = Object.keys(weights);\r\nconst sizeEnum = Object.keys(sizes);\r\nconst lineHeightEnum = Object.keys(lineHeights);\r\nconst textAlignEnum = ['center', 'left', 'right'];\r\nconst colorsEnum = Object.keys(colors);\r\n\r\nexport const propTypeText = {\r\n  family: PropTypes.oneOf(fontsEnum),\r\n  weight: PropTypes.oneOf(weightEnum),\r\n  size: PropTypes.oneOf(sizeEnum),\r\n  lh: PropTypes.oneOf(lineHeightEnum),\r\n  textAlign: PropTypes.oneOf(textAlignEnum),\r\n  mt: marginType,\r\n  mb: marginType,\r\n  ml: marginType,\r\n  mr: marginType,\r\n  m: PropTypes.string,\r\n  width: widthType,\r\n  color: PropTypes.oneOf(colorsEnum),\r\n  hidden: PropTypes.bool,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n    PropTypes.string,\r\n  ]).isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nimport { marginProps, widthTypeOf } from 'helpers';\r\nimport { sizes, weights } from '../helpers';\r\n\r\nexport const TextStyled = styled.p`\r\n  ${p => marginProps(p)}\r\n  ${p => p.width && widthTypeOf(p.width)}\r\n  font-family: ${p => p.theme.fonts[p.family]};\r\n  font-weight: ${p => p.theme.fontWeights[weights[p.weight]]};\r\n  font-size: ${p => p.theme.fontSizes[sizes[p.size]]};\r\n  line-height: ${p => p.theme.lineHeights[p.lh]};\r\n  ${p => p.textAlign && `text-align: ${p.textAlign};`}\r\n  ${p => p.color && `color: ${p.theme.colors[p.color]}`}\r\n`;\r\n","import React from 'react';\r\n\r\nimport { TextStyled } from './Text.styled';\r\nimport { propTypeText } from '../helpers';\r\n\r\nexport const Text = ({\r\n  family = 'manrope',\r\n  weight = 500,\r\n  size = 16,\r\n  lh = 'normal',\r\n  hidden,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <TextStyled\r\n      className={hidden && 'visually-hidden'}\r\n      family={family}\r\n      weight={weight}\r\n      size={size}\r\n      lh={lh}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </TextStyled>\r\n  );\r\n};\r\n\r\nText.propTypes = propTypeText;\r\n","import { marginProps, widthTypeOf } from 'helpers';\r\nimport styled from 'styled-components';\r\nimport { sizes, weights } from '../helpers';\r\n\r\nexport const H1Styled = styled.h1`\r\n  ${p => marginProps(p)}\r\n  ${p => p.width && widthTypeOf(p.width)}\r\n\r\n  font-family: ${p => p.theme.fonts[p.family]};\r\n  font-weight: ${p => p.theme.fontWeights[weights[p.weight]]};\r\n  font-size: ${p => p.theme.fontSizes[sizes[p.size]]};\r\n  line-height: ${p => p.theme.lineHeights[p.lh]};\r\n  ${p => p.textAlign && `text-align: ${p.textAlign};`}\r\n  ${p => p.color && `color: ${p.theme.colors[p.color]}`}\r\n`;\r\n\r\nexport const H2Styled = styled.h2`\r\n  ${p => marginProps(p)}\r\n  ${p => p.width && widthTypeOf(p.width)}\r\n\r\n  font-family: ${p => p.theme.fonts[p.family]};\r\n  font-weight: ${p => p.theme.fontWeights[weights[p.weight]]};\r\n  font-size: ${p => p.theme.fontSizes[sizes[p.size]]};\r\n  line-height: ${p => p.theme.lineHeights[p.lh]};\r\n  ${p => p.textAlign && `text-align: ${p.textAlign};`}\r\n  ${p => p.color && `color: ${p.theme.colors[p.color]}`}\r\n`;\r\n\r\nexport const H3Styled = styled.h3`\r\n  ${p => marginProps(p)}\r\n  ${p => p.width && widthTypeOf(p.width)}\r\n\r\n  font-family: ${p => p.theme.fonts[p.family]};\r\n  font-weight: ${p => p.theme.fontWeights[weights[p.weight]]};\r\n  font-size: ${p => p.theme.fontSizes[sizes[p.size]]};\r\n  line-height: ${p => p.theme.lineHeights[p.lh]};\r\n  ${p => p.textAlign && `text-align: ${p.textAlign};`}\r\n  ${p => p.color && `color: ${p.theme.colors[p.color]}`}\r\n`;\r\n\r\nexport const H4Styled = styled.h4`\r\n  ${p => marginProps(p)}\r\n  ${p => p.width && widthTypeOf(p.width)}\r\n\r\n  font-family: ${p => p.theme.fonts[p.family]};\r\n  font-weight: ${p => p.theme.fontWeights[weights[p.weight]]};\r\n  font-size: ${p => p.theme.fontSizes[sizes[p.size]]};\r\n  line-height: ${p => p.theme.lineHeights[p.lh]};\r\n  ${p => p.textAlign && `text-align: ${p.textAlign};`}\r\n  ${p => p.color && `color: ${p.theme.colors[p.color]}`}\r\n`;\r\n","import React from 'react';\r\n\r\nimport { H2Styled } from './Title.styled';\r\nimport { propTypeText } from '../helpers';\r\n\r\nexport const TitleH2 = ({\r\n  family = 'manrope',\r\n  weight = 700,\r\n  size = 48,\r\n  lh = 'heading',\r\n  hidden,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <H2Styled\r\n      className={hidden && 'visually-hidden'}\r\n      family={family}\r\n      weight={weight}\r\n      size={size}\r\n      lh={lh}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </H2Styled>\r\n  );\r\n};\r\n\r\nTitleH2.propTypes = propTypeText;\r\n","import React from 'react';\r\n\r\nimport { H3Styled } from './Title.styled';\r\nimport { propTypeText } from '../helpers';\r\n\r\nexport const TitleH3 = ({\r\n  family = 'manrope',\r\n  weight = 700,\r\n  size = 28,\r\n  lh = 'heading',\r\n  hidden,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <H3Styled\r\n      className={hidden && 'visually-hidden'}\r\n      family={family}\r\n      weight={weight}\r\n      size={size}\r\n      lh={lh}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </H3Styled>\r\n  );\r\n};\r\n\r\nTitleH3.propTypes = propTypeText;\r\n","import styled from 'styled-components';\nimport { AiOutlineLike } from 'react-icons/ai';\n\nexport const StyledMetaButton = styled.button`\n  display: flex;\n  gap: ${p => p.theme.space[3]}px;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  color: #999;\n  background: transparent;\n  outline: none;\n  cursor: pointer;\n  transition: scale 0.3 ease-in-out;\n\n  color: ${p => p.checked && p.theme.colors.da};\n\n  &:hover {\n    color: ${p => p.theme.colors.a};\n    transform: scale(1.05);\n  }\n`;\n\nexport const LikeIcon = styled(AiOutlineLike)`\n  width: 24px;\n  height: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledMetaButton, LikeIcon } from './LikeButton.styled';\n\nexport const LikeButton = ({ postId, isLoading, likedPost, likeCount, handleLike }) => {\n  return (\n    <StyledMetaButton onClick={() => handleLike(postId)} disabled={isLoading} checked={likedPost}>\n      <LikeIcon />\n      {likeCount}\n    </StyledMetaButton>\n  );\n};\n\nLikeButton.propTypes = {\n  handleLike: PropTypes.func,\n  isLoading: PropTypes.bool,\n  likeCount: PropTypes.number,\n  likedPost: PropTypes.array,\n  postId: PropTypes.string,\n};\n","export const convertCreationDateToDateAndTime = date => {\n  const convertedDate = new Date(date);\n  return `${convertedDate.toLocaleDateString('uk')} | ${convertedDate.toLocaleTimeString('uk', {\n    hour: '2-digit',\n    minute: '2-digit',\n  })}`;\n};\n","import styled from 'styled-components';\nimport { AiOutlineLike } from 'react-icons/ai';\n\nexport const ImgPost = styled.img`\n  background: gray;\n  flex-grow: 0;\n  width: 100%;\n  height: auto;\n  border-radius: ${p => p.theme.radii.inputRadius};\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  object-fit: cover;\n\n  @media screen and (min-width: 768px) {\n    height: 240px;\n    width: 240px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 320px;\n    width: 320px;\n  }\n`;\n\nexport const BoxCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: white;\n  padding: 40px 30px;\n  border-radius: ${p => p.theme.radii.inputRadius};\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 30px;\n  }\n  @media screen and (min-width: 1280px) {\n    gap: 75px;\n  }\n`;\nexport const ContentBlock = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  gap: 30px;\n`;\nexport const ImgBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\nexport const PostIcon = styled(AiOutlineLike)`\n  fill: ${p => p.theme.colors.a};\n  width: 25px;\n  height: 25px;\n`;\nexport const LikeBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\nexport const PostInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { TitleH2 } from 'components/global/text';\nimport { Text } from 'components/global/text';\nimport { convertCreationDateToDateAndTime } from '../../helpers';\nimport { ImgPost, ContentBlock, ImgBlock, PostInfo, BoxCard } from './PostCard.styled';\n\nimport { switchLikePost } from 'api/posts';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useSelector } from 'react-redux';\nimport { getUserId } from 'redux/auth';\nimport { LikeButton } from '../../common/LikeButton/LikeButton';\n\nexport const PostCard = ({ post }) => {\n  const { title, text, category, image, likes, author, createdAt, _id: postId } = post;\n  const userId = useSelector(getUserId);\n\n  const client = useQueryClient();\n\n  const { mutate: switchLike } = useMutation({\n    mutationKey: ['posts', postId],\n    mutationFn: () => switchLikePost(postId),\n    onSuccess: () => {\n      client.invalidateQueries({ queryKey: ['posts', postId] });\n      client.invalidateQueries({ queryKey: ['posts'] });\n    },\n  });\n\n  const handleLike = () => {\n    switchLike(postId);\n  };\n\n  return (\n    <BoxCard>\n      <ImgBlock>\n        <ImgPost src={image} alt=\"title\" />\n        <Text weight={'600'}>Author: {author ? author.name : 'Incognito'}</Text>\n        <Text weight={'600'}>Category: {category}</Text>\n      </ImgBlock>\n      <ContentBlock>\n        <TitleH2 size={'32'}>{title}</TitleH2>\n        <Text weight={'400'} lh=\"big\">\n          {text}\n        </Text>\n        <PostInfo>\n          <LikeButton\n            postId={postId}\n            likedPost={likes.includes(userId)}\n            likeCount={likes.length}\n            handleLike={handleLike}\n          />\n          <Text>Date of publication: {convertCreationDateToDateAndTime(createdAt)}</Text>\n        </PostInfo>\n      </ContentBlock>\n    </BoxCard>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  position: relative;\n  width: 100%;\n`;\nexport const Input = styled.textarea`\n  width: 100%;\n  height: 200px;\n\n  font-size: ${p => p.theme.fontSizes.m};\n  padding: 19px 32px 19px 32px;\n  border: 2px solid ${p => p.theme.colors.trsp};\n  outline: none;\n  box-shadow: ${p => p.theme.shadows.s};\n  border-radius: ${p => p.theme.radii.normal};\n\n  transition: var(----transition-border-color);\n\n  &:focus {\n    border: 2px solid ${p => p.theme.colors.a};\n  }\n  @media (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.xl};\n  }\n`;\nexport const ImgComment = styled.img`\n  flex-grow: 0;\n  width: 80px;\n  height: 80px;\n  border-radius: ${p => p.theme.radii.round};\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  object-fit: cover;\n`;\n\nexport const Content = styled.form`\n  display: flex;\n  gap: 35px;\n`;\nexport const ButtonBlock = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  gap: 30px;\n  flex-direction: column;\n  align-items: flex-end;\n`;\nexport const Button = styled.button`\n  position: absolute;\n  right: 50px;\n  bottom: 30px;\n  display: block;\n  display: flex;\n  align-items: center;\n  font-size: 18px;\n  gap: 5px;\n  padding: 5px 15px;\n  border-radius: ${p => p.theme.radii.buttonRadius};\n\n  color: ${p => p.theme.colors.a};\n  background-color: ${p => p.theme.colors.w};\n\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  border: 2px solid ${p => p.theme.colors.a};\n\n  transition: var(----transition-border-color);\n  &:hover {\n    color: ${p => p.theme.colors.w};\n    background-color: ${p => p.theme.colors.a};\n  }\n  @media (min-width: 768px) {\n    padding: 10px 40px;\n  }\n`;\n\nexport const ErrorInput = styled.div`\n  position: absolute;\n  color: red;\n  font-size: 10px;\n  top: -20px;\n\n  @media (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n`;\n","import { Box } from 'components/global/Box';\nimport { Text } from 'components/global/text';\nimport { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { AiOutlineSend } from 'react-icons/ai';\nimport { getUserPhoto } from 'redux/auth';\nimport { useSelector } from 'react-redux';\nimport {\n  Button,\n  ButtonBlock,\n  Content,\n  ImgComment,\n  Input,\n  Label,\n  ErrorInput,\n} from './PostComment.styled';\n\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { addNewCommentToPost } from 'api';\n\nconst validationComment = {\n  minLength: {\n    value: 2,\n    message: 'Minimum length 2 symbols',\n  },\n  maxLength: {\n    value: 200,\n    message: 'Maximum length 200 symbols',\n  },\n};\n\nexport const PostComment = ({ postId }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n    formState: { isSubmitSuccessful },\n  } = useForm({ defaultValues: { comment: '' } });\n  const client = useQueryClient();\n\n  const userPhoto = useSelector(getUserPhoto);\n\n  const { mutate: addComment } = useMutation({\n    mutationKey: ['posts', postId],\n    mutationFn: data => addNewCommentToPost(postId, data),\n    onSuccess: () => {\n      client.invalidateQueries({ queryKey: ['posts', postId] });\n      client.invalidateQueries({ queryKey: ['posts'] });\n    },\n  });\n\n  const onSubmit = async data => {\n    await addComment({ text: data.comment });\n  };\n\n  useEffect(() => {\n    reset();\n  }, [isSubmitSuccessful, reset]);\n\n  return (\n    <Box mt={60} mb={40}>\n      <Text weight={'600'} ml={110} mb={30}>\n        Add comments:\n      </Text>\n      <Content onSubmit={handleSubmit(onSubmit)}>\n        <ImgComment src={userPhoto} alt=\"\" />\n        <ButtonBlock>\n          <Label>\n            <Input placeholder=\"Type comment\" {...register('comment', validationComment)}></Input>\n            {errors.comment && <ErrorInput>{errors.comment.message}</ErrorInput>}\n          </Label>\n          <Button type=\"submit\">\n            Send <AiOutlineSend size={18} />\n          </Button>\n        </ButtonBlock>\n      </Content>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ImgComment = styled.img`\nflex-grow: 0;\nwidth: 70px;\nheight: 70px;\nborder-radius: ${p => p.theme.radii.round};\nbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\nobject-fit: cover;\n\n`\nexport const Item = styled.li`\n    width: 100%;\n    min-height: 70px;\n    display: flex;\n    gap: 25px;\n`\nexport const List = styled.ul`\ndisplay:flex;\nflex-direction: column;\ngap: 20px;\n\n`\nexport const Feedback = styled.div`\n background: white;\n padding: 15px 30px;\n border-radius: ${p => p.theme.radii.inputRadius};\n box-shadow: ${p => p.theme.shadows.s};\n`","import {ImgComment, Item, Feedback} from './PostList.styled';\nimport { Text } from 'components/global/text';\nexport const PostItem = ({src, text}) =>{\n    return(\n        <Item>\n            <ImgComment src={src} alt=\"\"/>\n            <Feedback>\n            <Text>{text}</Text>\n            </Feedback>\n            \n        </Item>\n    )\n}","import { Box } from 'components/global/Box';\nimport { PostItem } from './PostItem';\nimport { List } from './PostList.styled';\n\nexport const PostList = ({ comments }) => {\n  return (\n    <Box pl={6}>\n      <List>\n        {comments.map(({ _id, author, text }) => {\n          const photoUrl = author?.photo ?? `https://api.multiavatar.com/${_id}.png`;\n          return <PostItem key={_id} src={photoUrl} text={text} />;\n        })}\n      </List>\n    </Box>\n  );\n};\n\n//\n","import styled from 'styled-components';\n\n\nexport const BlockBack = styled.a`\ndisplay: flex;\ngap: 20px;\nmargin-bottom: 30px;\ncursor: pointer;\ntransition: transform 250ms linear;\n&:hover {\n    transform: scale(1.05);\n  }\n`\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Container } from 'components/global/Container';\nimport { PostCard } from './PostCard/PostCard';\nimport { PostComment } from './PostComment/PostComment';\nimport { PostList } from './PostList/PostList';\nimport { Text } from 'components/global/text';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { BlockBack } from './PostDetails.styled';\n\nexport const PostDetailsComponent = ({ post, comments }) => {\n  const navigate = useNavigate();\n\n  const handleGoBackBtn = () => {\n    navigate(-1);\n  };\n\n  return (\n    <Container pb={100} pt={100}>\n      <BlockBack onClick={handleGoBackBtn}>\n        <BsArrowLeft size={'32px'} color=\"#F59256\" />\n        <Text size={'24'} lh=\"heading\" color=\"a\">\n          Back\n        </Text>\n      </BlockBack>\n\n      <PostCard post={post} />\n      <PostComment postId={post._id} />\n      <PostList comments={comments} />\n    </Container>\n  );\n};\n","import React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { fetchOnePost } from 'api/posts';\n\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/global/Loader';\nimport { PostDetailsComponent } from 'components/modules/Blog/PostDetails';\n\nexport const PostDetailsMain = () => {\n  const { id: postId } = useParams();\n\n  const { data, isSuccess, isLoading, isError, error } = useQuery({\n    queryKey: ['posts', postId],\n    queryFn: () => fetchOnePost(postId),\n    staleTime: 5 * 60 * 1000,\n  });\n\n  if (isLoading) {\n    return <Loader />;\n  }\n  if (isError) {\n    return [401, 403].includes(error.response.status) ? (\n      <p>Please login...</p>\n    ) : (\n      <p>An error occurred while fetching the data. Please try again later.</p>\n    );\n  }\n  if (isSuccess) {\n    const { comments, ...post } = data;\n    return <PostDetailsComponent post={post} comments={comments} />;\n  }\n};\n","import React from 'react';\nimport { PostDetailsMain } from 'components/modules/Blog/PostDetails';\nconst PostDetails = () => {\n  return <PostDetailsMain />;\n};\n\nexport default PostDetails;\n"],"names":["weights","Object","freeze","sizes","fontsEnum","keys","fonts","weightEnum","sizeEnum","lineHeightEnum","lineHeights","colorsEnum","colors","TextStyled","PropTypes","marginType","widthType","isRequired","styled","p","marginProps","width","widthTypeOf","theme","family","fontWeights","weight","fontSizes","size","lh","textAlign","color","Text","hidden","children","props","className","H2Styled","H3Styled","TitleH2","TitleH3","StyledMetaButton","space","checked","da","a","LikeIcon","AiOutlineLike","LikeButton","postId","isLoading","likedPost","likeCount","handleLike","onClick","disabled","convertCreationDateToDateAndTime","date","convertedDate","Date","toLocaleDateString","toLocaleTimeString","hour","minute","ImgPost","radii","inputRadius","BoxCard","ContentBlock","ImgBlock","PostInfo","PostCard","post","title","text","category","image","likes","author","createdAt","_id","userId","useSelector","getUserId","client","useQueryClient","switchLike","useMutation","mutationKey","mutationFn","switchLikePost","onSuccess","invalidateQueries","queryKey","mutate","src","alt","name","includes","length","Label","Input","m","trsp","shadows","s","normal","xl","ImgComment","round","Content","ButtonBlock","Button","buttonRadius","w","semiBold","ErrorInput","validationComment","minLength","value","message","maxLength","PostComment","useForm","defaultValues","comment","register","handleSubmit","errors","formState","reset","isSubmitSuccessful","userPhoto","getUserPhoto","addComment","data","addNewCommentToPost","onSubmit","useEffect","Box","mt","mb","ml","placeholder","type","Item","List","Feedback","PostItem","PostList","comments","pl","map","photoUrl","photo","BlockBack","PostDetailsComponent","navigate","useNavigate","Container","pb","pt","PostDetailsMain","useParams","id","useQuery","queryFn","fetchOnePost","staleTime","isSuccess","isError","error","Loader","response","status"],"sourceRoot":""}